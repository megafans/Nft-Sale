# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - 'main'
  - 'develop'
  - 'feature/*'
  - 'release/*'

name: $(Build.DefinitionName)-$(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
pool:
  vmImage: 'ubuntu-latest'

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - task: YarnInstaller@3
    inputs:
      versionSpec: '1.x'

  - task: DeleteFiles@1
    displayName: 'Remove robots.txt in production'
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    inputs:
      Contents: 'public/robots.txt'

  - task: Bash@3
    displayName: 'Yarn: hardlock version'
    inputs:
      targetType: inline
      script: |
        yarn set version 3.2.4

  - task: Bash@3
    displayName: 'Yarn: import workspace tools'
    inputs:
      targetType: inline
      script: |
        yarn plugin import workspace-tools

  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
      path: $(YARN_CACHE_FOLDER)
    displayName: 'Yarn: cache node_modules'

  - script: yarn workspaces focus --all
    displayName: Install dependencies

  - script: yarn build
    displayName: Build application
    env:
      NODE_OPTIONS: --max_old_space_size=16384

  - script: yarn workspaces focus --all --production
    displayName: Prune dependencies

  - task: CopyFiles@2
    displayName: 'Copy files to $(Build.BinariesDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*
        !.git/**
        !.vscode/**
        !test/**
      TargetFolder: '$(Build.BinariesDirectory)'

  - task: ArchiveFiles@2
    displayName: 'Package FunctionApp'
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/nextjs.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
